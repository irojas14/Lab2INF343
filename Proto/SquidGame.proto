syntax = "proto3";

option go_package = "github.com/irojas14/Lab2INF343/Proto";

package Proto;

// SERVICIOS

service Lider {
    rpc Unirse (SolicitudUnirse) returns (stream RespuestaUnirse);
    rpc VerMonto (SolicitudVerMonto) returns (RespuestaVerMonto);
    rpc EnviarJugada (SolicitudEnviarJugada) returns (RespuestaEnviarJugada);
}

service Pozo {
    rpc VerMonto (SolicitudVerMonto) returns (RespuestaVerMonto);
}

service NameNode {
    rpc RegistrarJugadas (SolicitudRegistrarJugadas) returns (RespuestaRegistrarJugadas);
    rpc DevolverJugadas (SolicitudDevolverJugadas) returns (RespuestaDevolverJugadas);
}

service DataNode {
    rpc RegistrarJugadas (SolicitudRegistrarJugadas) returns (RespuestaRegistrarJugadas);
    rpc DevolverJugadas (SolicitudDevolverJugadas) returns (RespuestaDevolverJugadas);
}

// MENSAJES

// MENSAJES de Solicitud y Respuesta

// ENUMS

enum JUEGO {
    None = 0;
    Luces = 1;
    TirarCuerda = 2;
    TodoNada = 3;
}

enum ESTADO {
    Muerto = 0;
    Vivo = 1;
    Ganador = 2;
}


// LIDER

// Unirse

message SolicitudUnirse {
    string solictud = 1;
}

message RespuestaUnirse {
    enum TIPO {
        Esperar = 0;
        Comenzar = 1;
    }
    TIPO msgTipo = 1;
    JugadorId numJugador = 2;
    JUEGO numJuego = 3;
    RondaId numRonda = 4;
}

// Ver Monto

message SolicitudVerMonto {
}

message RespuestaVerMonto {
    float monto = 1;
}

// Enviar Jugada

message SolicitudEnviarJugada {
    PaqueteJugada jugadaInfo = 1;
}

message RespuestaEnviarJugada {
    JUEGO numJuego = 1;
    Jugada jugadaLider = 2;    
    ESTADO estado = 3;
}

// NAMENODE Y DATANODE

// Registrar Jugadas

message SolicitudRegistrarJugadas {
    JugadasJugador jugadasJugador = 1;
}

message RespuestaRegistrarJugadas {
    JugadorId numJugador = 1;
}

// Devolver Jugadas

message SolicitudDevolverJugadas {
    JugadorId numJugador = 1;
}

message RespuestaDevolverJugadas {
    JugadasJugador jugadasJugador = 1;
}

// MENSAJES Structs Auxiliares

message JugadorId {
    int32 val = 1;
}

message RondaId {
    int32 val = 1;
}

message Jugada {
    int32 val = 1;
}

message PaqueteJugada {
    JugadorId numJugador = 1;
    JUEGO numJuego = 2;    
    RondaId numRonda = 3;
    Jugada jugada = 4;
}

message JugadasRonda {
    RondaId numRonda = 1;
    repeated Jugada jugadas = 2;
}

message JugadasJugador {
    JugadorId numJugador = 1;
    repeated JugadasRonda jugadasRonda = 2;
}

message JugadasRondaJugador {
    JugadorId numJugador = 1;
    JugadasRonda jugadasRonda = 2;
}

message Jugadas {
    repeated JugadasJugador jugadasJugadores = 1;
}